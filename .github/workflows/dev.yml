name: dev

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: olafurpg/setup-scala@v5
        with:
          java-version: adopt@1.11

      - name: Cache ~/.cache
        uses: actions/cache@v1
        with:
          path: ~/.cache
          key: ${{ runner.os }}-coursier-${{ hashFiles('project/Libs.scala') }}
          restore-keys: |
            ${{ runner.os }}-coursier-

      - name: Cache ~/.sbt
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('project/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-

      - name: Configure ntp time
        run: |
          sudo apt-get install ntp -y
          sudo ntptime -T 37

      - name: Tests
        run: |
          sbt -DenableCoverage=true ';set every enableFatalWarnings := true; csw-time/test:test'
          sbt -DenableCoverage=true -DdisableTimeTests ';set every enableFatalWarnings := true; test:test'

      - name: Coverage Report
        run: |
          sbt -DenableCoverage=true coverageReport
          sbt coverageAggregate

      - uses: actions/upload-artifact@v1
        with:
          name: Coverage Report
          path: target/scala-2.13/scoverage-report

  multi-jvm-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: olafurpg/setup-scala@v5
        with:
          java-version: adopt@1.11

      - name: Cache ~/.cache
        uses: actions/cache@v1
        with:
          path: ~/.cache
          key: ${{ runner.os }}-coursier-${{ hashFiles('project/Libs.scala') }}
          restore-keys: |
            ${{ runner.os }}-coursier-

      - name: Cache ~/.sbt
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('project/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-

      - name: Docs Check
        run: |
          sbt clean scalafmtCheck scalastyle
          sbt makeSite

      - name: Multi-Jvm Tests
        run: sbt ';set every enableFatalWarnings := true; integration/multi-jvm:test'

  slack-success:
    needs: [unit-tests, multi-jvm-tests]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: pullreminders/slack-action@master
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          args: '{\"channel\":\"#csw-build\", \"attachments\": [ { \"title\":\"SUCCESS\", \"text\": \"[ ${{ github.event.repository.name }} ] : [ ${{ github.workflow }} ] : [ ${{ github.ref }} ] \n https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\", \"color\": \"#00FF00\" } ]}'

  slack-failure:
    needs: [unit-tests, multi-jvm-tests]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - uses: pullreminders/slack-action@master
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          args: '{\"channel\":\"#csw-build\", \"attachments\": [ { \"title\":\"FAILURE\", \"text\": \"[ ${{ github.event.repository.name }} ] : [ ${{ github.workflow }} ] : [ ${{ github.ref }} ] \n https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\", \"color\": \"#FF0000\" } ]}'

  slack-cancelled:
    needs: [unit-tests, multi-jvm-tests]
    if: cancelled()
    runs-on: ubuntu-latest
    steps:
      - uses: pullreminders/slack-action@master
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          args: '{\"channel\":\"#csw-build\", \"attachments\": [ { \"title\":\"CANCELLED\", \"text\": \"[ ${{ github.event.repository.name }} ] : [ ${{ github.workflow }} ] : [ ${{ github.ref }} ] \n https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\", \"color\": \"#EE6F47\" } ]}'
