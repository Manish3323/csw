package csw.location.cli

import java.io.ByteArrayOutputStream

import org.scalatest.{FunSuite, Matchers}

class ArgsParserTest extends FunSuite with Matchers {

  //Capture output/error generated by the parser, for cleaner test output. If interested, errCapture.toString will return capture errors.
  val outCapture = new ByteArrayOutputStream
  val errCapture = new ByteArrayOutputStream
  val parser     = new ArgsParser("csw-cluster-seed")

  def silentParse(args: Array[String]): Option[Options] =
    Console.withOut(outCapture) {
      Console.withErr(errCapture) {
        parser.parse(args)
      }
    }

  test("parse without arguments") {
    val args = Array("")
    silentParse(args) shouldBe None
  }

  test("parse with all arguments without testMode") {
    val args = Array("--clusterPort", "1234")
    silentParse(args) shouldBe Some(Options(Some(1234)))
  }

  test("parse with all arguments --testMode") {
    val args = Array("--clusterPort", "1234", "--testMode")
    silentParse(args) shouldBe Some(Options(Some(1234), testMode = true))
  }

  test("parse with some arguments") {
    val args = Array("--clusterPort", "1234")
    silentParse(args) shouldBe Some(Options(Some(1234)))
  }
}
